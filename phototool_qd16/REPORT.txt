Please fill in this report before submitting this whole project folder as your lab exercise.

Full name:  
Login name: 
Student ID: 

Average time to process each of the four photos (10 marks)
===============================================
Note: using VM arguments:  -Xmx2G 
   and program arguments: grayscale undo sepia half half save Eiffel.jpg Shoes.jpg Eiffel.jpg Shoes.jpg
   (ignore the first 3-4 measurements of the first photo, while the HotSpot compiler does its stuff)

   Description of Program               Eiffel    shoes     Eiffel     shoes
   ================================     ======    =====     ======     =====
0. Original program on MY machine:         2.2      3.1        4.9       8.2  (seconds)

1. Original program on YOUR machine:       1.2      1.4        2.4       3.4  (seconds)
2. Your Phototool time after task 1:       1.1      1.2        1.1       1.2  (seconds)
3. Your Phototool time after task 2:         ?        ?          ?         ?  (seconds)

3. Your Phototool time after task 2.1:     1.0      1.0        1.0       1.0  (seconds)
3. Your Phototool time after task 2.2:     .38      .38        .38       .38  (seconds)

Answer these questions (10 marks)
======================
4. Does the result of BufferedImage.getRGB (7 args) use row-major or column-major order:  
BufferedImage.getRGB uses row-major. Because the performance improved significantly after flipping row and col index
 of for loops, looping through row contiguously.

5. Using RGB int pixels, how many BYTES of memory does one row of Eiffel.jpg consume:


6. What CPU (manufacturer and exact CPU model) are you running your program on:  eg. Intel i7-2620M @ 2.7GHz

7. What is the size of EACH ONE of its L1 data caches?

8. What is the size of EACH ONE of its L2 caches?

9. What is the total size of the L3 cache?

10. How many rows of Eiffel.jpg will fit into ONE of the L1 data caches?

Note: for the following two questions:
     Assume both arrays are full of random numbers.
     Assume a 64-bit JVM, so pointers are 8 bytes each.
     Assume that the JVM uses 16 bytes object header, in addition to the data fields.
     (For more detail, see this blog: http://btoddb-java-sizing.blogspot.co.nz/)
     Note that an int[] object has a int field for the length, plus enough space
     to store all the int values in the array.

11. How many bytes of memory does an int[1000] object take? 
(Show your working)

12. How many bytes of memory does an Integer[1000] object take?
(Show your working)


Comment on any surprises / successes / difficulties you had in this lab exercise (optional)
============================================================================
